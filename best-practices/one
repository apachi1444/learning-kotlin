* Avoid for-loops

// don’t
for( in in 0 until 10 ) {
	println(i)
}

// do
1/
repeat(10) {
	println(it)
}

------

// don’t
val list = listOf(1,2,3)
for( e in list ){
	println(e)
}

// do
listOf(1,2,3).forEach {
	println(it)
}

-------- ( map )
val list = listOf(1, 2, 3, 4, 5, 6)
  val newList = mutableListOf<Int()
  for (e in list) {
    newList.add(e * e)
  }
	// Do
  val list = listOf(1, 2, 3, 4, 5, 6)
  val newList = list.map { it * it }
* Scope functions :

- let ( is used to bypass possible null types )
	age?.let {
		do something when value is not null !
	} ?: doSomething when value is null !

- apply ( is used when you wish to change the object’s properties or behavior )
val me = Person().apply{
		nmae = “newName”
		age = 19
	}
	println(me)

- with ( is used when you want to use the properties of an object )

val me = with(Person()) {
    name = "Nishant"
    age = 19
    gender = 'M'
  }
  println(me)
// returns a Unit variable

- run ( is similar to the let function , but here the object reference is passed down as this instead of it )

val me = Person(
    name = "Nishant",
    age = 19,
    gender = 'M'
  )
me.run {
  println("My name is $name and I am $age years old.");
}

- also :
this takes in an object and performs some additional tasks on it.

Person( name = “yessine”, age = 19 , gender = ‘M’ ).also {  println(it)  }


